@PACKAGE_INIT@
include(CMakeFindDependencyMacro)

set(QDP_PARALLEL_ARCH @qdpParArch@)
if( QDP_PARALLEL_ARCH STREQUAL "scalar")
  set(QDP_ARCH_SCALAR ON)
elseif( QDP_PARALLEL_ARCH STREQUAL "parscalar" )
  set(QDP_ARCH_PARSCALAR ON)
elseif( QDP_PARALLEL_ARCH STREQUAL "scalarvec" )
  set(QDP_ARCH_SCALARVEC ON)
elseif( QDP_PARALLEL_ARCH STREQUAL "parscalarvec" )
  set(QDP_ARCH_PARSCALARVEC ON)
endif()

# Check if we need QMP
if( QDP_ARCH_PARSCALAR OR QDP_ARCH_PARSCALARVEC )
  find_dependency(QMP REQUIRED)
endif()

# This is just in case we want to rebuild the examples as 
# an external
set(QDP_USE_SSE @QDP_USE_SSE@)
set(QDP_USE_SSE2 @QDP_USE_SSE2@)
set(QDP_USE_SSE3 @QDP_USE_SSE3@)

set(QDP_PRECISION @qdpPrecision@)
set(QDP_LAYOUT    @qdpLayout@)
set(QDP_USE_OMP_THREADS @QDP_USE_OMP_THREADS@)
 
# Find submodules.
# I am working on the premise that in a regular build currently
# These will be installed in parallel with QDP++
# 
# However, the user is permitted to specify them by pointing 
# XPathReader_DIR, FileDB_DIR, LibIntrin_DIR and QIO_DIR to 
# directories conttaining the PackageXXXConfig.cmake files
#
if("@XPathReader_DIR@" STREQUAL "")
  list(APPEND CMAKE_PREFIX_PATH ${CMAKE_CURRENT_LIST_DIR}/../XPathReader)
endif()
 
if("@FileDB_DIR@" STREQUAL "")
  list(APPEND CMAKE_PREFIX_PATH ${CMAKE_CURRENT_LIST_DIR}/../FileDB)
endif()

if("@QIO_DIR@" STREQUAL "")
  list(APPEND CMAKE_PREFIX_PATH ${CMAKE_CURRENT_LIST_DIR}/../QIO)
endif()

# Now find the dependencies 
find_dependency(XPathReader REQUIRED)
find_dependency(FileDB REQUIRED)
find_dependency(QIO REQUIRED)


# Libintrin -- and only if QDP_USE_SSE2 is enabled
if( @QDP_USE_SSE2@ )
if("@LibIntrin_DIR@" STREQUAL "")
  list(APPEND CMAKE_PREFIX_PATH ${CMAKE_CURRENT_LIST_DIR}/../LibIntrin)
endif()
find_dependency(LibIntrin REQUIRED)
endif()

# Optional dependencies
# TBB 
if(@QDP_USE_TBBPOOL_ALLOCATOR@) 
  find_dependency(TBB REQUIRED)
endif()

# HDF5
if(@QDP_USE_HDF5@)
  find_dependency(HDF5 REQUIRED)
endif()

set(QDP_USE_OPENMP @QDP_USE_OPENMP@)
if( QDP_USE_OPENMP )
  find_dependency(OpenMP REQUIRED)
endif()


find_dependency(Threads REQUIRED)

include(${CMAKE_CURRENT_LIST_DIR}/QDPXXTargets.cmake)
